<?php
namespace  app\index\controller;

use app\index\controller\Base;
use think\Db;
use think\Session;

class Index  extends  Base {


    protected $play = 'play_cates';

    protected $order = 'order';

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub

        if($this->check_user() == false){
            return $this->redirect('login/login');
        }
    }


    //1 选择页面
     public  function index(){
         if($this->request->isGet()){
             $cates = Db::name($this->play)->order('id desc')->select();
             $this->assign('cates',$cates);
             return $this->fetch();
         }

         if($this->request->isPost()){
            $cid = input('post.cid','','int');
            $mid = input('post.mid','','int');

            if(empty($cid) || empty($mid)|| !isset($mid)){
                return false;
            }

            $res = Db::name($this->order)->insertGetId(['cid'=>$cid,'mid'=>$mid,'orderId'=>makeOrder(),'create_time'=>time()]);

            if($res){
                return json(['code'=>200,'msg'=>'操作成功','order'=>$res]);
            }else{
                return json(['code'=>400,'msg'=>'網路故障，請重新操作']);
            }
         }
    }

    //充值方式
    public function types(){
        if($this->request->isGet()){
            return $this->fetch();
        }

        if($this->request->isPost()){
            $order = input('post.order','','int');
            $pid   = input('post.pid','','int');

            if(empty($pid) || empty($order)|| $order <=0 || !isset($order)){
                return false;
            }

            $res = Db::name($this->order)->where('id',$order)->update(['pid'=>$pid]);

            if($res){
                return json(['code'=>200,'pid'=>$pid]);
            }else{
                return json(['code'=>400,'msg'=>'操作失败']);
            }

        }
    }

    //type1:好友转账
    public function info(){
        if($this->request->isGet()){
            return $this->fetch();
        }

        if($this->request->isPost()){
           $id  = input('post.order','','int');
           $alipay  = input('post.alipay','','trim');

           if(empty($id) || !isset($id)){
               return false;
           }

           $res = Db::name('order')->where(['id'=>$id])->update(['alipay'=>$alipay]);

           if($res){
               return json(['code'=>200,'msg'=>'操作成功']);
           }else{
               return json(['code'=>400,'msg'=>'操作失败']);
           }

        }

    }

    //type2:充值模板
    public function chong(){
        if($this->request->isGet()){
            return $this->fetch();
        }

        if($this->request->isPost()){
              $order = input('post.order','','int');
              $imgs  = input('post.imgs','','trim');

              if(empty($order) || !isset($order)){
                  return false;
              }

              $ret = Db::name('order')->where(['id'=>$order])->update(['imgs'=>$imgs]);

              if($ret){
                  return json(['code'=>200,'msg'=>'操作成功']);
              }else{
                  return json(['code'=>400,'msg'=>'操作失败']);
              }
        }
    }

    //type3:转速快
    public function zhuan(){
        if($this->request->isGet()){
            return $this->fetch();
        }

        if($this->request->isPost()){
            $order = input('post.order','','int');
            $imgs  = input('post.imgs','','trim');
            $names = input('post.names','','trim');

            if(empty($order) || !isset($order)){
                return false;
            }

            $ret = Db::name('order')->where(['id'=>$order])->update(['imgs'=>$imgs,'names'=>$names]);

            if($ret){
                return json(['code'=>200,'msg'=>'操作成功']);
            }else{
                return json(['code'=>400,'msg'=>'操作失败']);
            }
        }
    }


    //账单记录
    public function history(){
        $mid  = Session::get('member.id');
        $list = Db::name($this->order)
            ->where(['mid'=>$mid,'status'=>'!= -1'])
            ->order('create_time desc ,id desc')
            ->limit(0,20)
            ->select();
        $this->assign('list',$list);
        return $this->fetch();
    }

    //todo 无用
    public function check_order(){

    }


    public function Upimgs(){
        // 获取上传文件
        $file =$this->request->file('file');
        // 验证图片,并移动图片到框架目录下。
        $path = ROOT_PATH.'public/Upload/imgs/';
        $info = $file-> move($path);
        if($info){
            $mes = $info->getSaveName();
            $mes = str_replace("\\",'/',$mes);
            return json(['code'=>'200','msg'=>'上传成功','path'=>'/Upload/imgs/'.$mes]);
        }else{
            // 文件上传失败后的错误信息
            $mes = $file->getError();
            return json(['code'=>'400','msg'=>$mes]);
        }
    }



}